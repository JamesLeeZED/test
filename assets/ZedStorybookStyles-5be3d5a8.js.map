{"version":3,"file":"ZedStorybookStyles-5be3d5a8.js","sources":["../../src/react/hooks/useHome.tsx","../../src/react/HomeComponent.tsx","../../stories/styles/ZedStorybookStyles.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\nexport type Home = {\r\n  homeId: string;\r\n  floorplanIds: string[];\r\n};\r\n\r\nexport const HomeContext = createContext<Home | undefined>(undefined);\r\n\r\nexport function useHome() {\r\n  return useContext(HomeContext);\r\n}\r\n","import { SceneLoader } from '@babylonjs/core';\r\nimport { forwardRef, memo, type ReactNode, useEffect, useImperativeHandle, useState } from 'react';\r\n\r\nimport { HomeContext, type Home as HomeType } from './hooks/useHome';\r\nimport { useZed } from './hooks/useZed';\r\n\r\nimport type { QualitySettings } from '@/data';\r\n\r\ntype Props = {\r\n  homeId: string;\r\n  qualitySettings: QualitySettings;\r\n  onLoaded?: () => void;\r\n  children?: ReactNode;\r\n};\r\n\r\nconst HomeComponent = forwardRef<HomeType | undefined, Props>(function Home(\r\n  { homeId, qualitySettings, onLoaded, children }: Props,\r\n  ref\r\n) {\r\n  const zed = useZed();\r\n  const [home, setHome] = useState<HomeType>();\r\n\r\n  useImperativeHandle(ref, () => home, [home]);\r\n\r\n  useEffect(() => {\r\n    if (!zed || !onLoaded) return;\r\n    const observer = zed.observer.onAllModelLoaded.addOnce(onLoaded);\r\n    return () => {\r\n      zed.observer.onAllModelLoaded.remove(observer);\r\n    };\r\n  }, [onLoaded, zed]);\r\n\r\n  useEffect(() => {\r\n    if (!zed) return;\r\n    // * 리소스 캐시 활성화 (이 데코레이터를 다른 repo에서 사용한다면, 이 부분 유의 필요)\r\n    // zed.EnableDBStorage(true);\r\n\r\n    const loaded = (async () => {\r\n      await zed.loadHome(homeId, qualitySettings);\r\n      setHome({\r\n        homeId: homeId,\r\n        floorplanIds: zed.activeFloorplanEntities.map((e) => e.Identifier.floorplanId),\r\n      });\r\n      return () => {\r\n        // TODO: unload home\r\n      };\r\n    })();\r\n\r\n    return () => {\r\n      (async () => {\r\n        (await loaded)();\r\n      })();\r\n    };\r\n  }, [homeId, qualitySettings, zed]);\r\n\r\n  return <HomeContext.Provider value={home}>{children}</HomeContext.Provider>;\r\n});\r\n\r\nexport const Home = memo(HomeComponent);\r\n","import { type CSSProperties } from 'react';\r\n\r\nexport const backgroundStyle: CSSProperties = {\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  background:\r\n    'radial-gradient(circle, rgba(125, 125, 125, 1) 0%, rgba(105, 105, 105, 1) 35%, rgba(45, 45, 45, 1) 100%)',\r\n};\r\n"],"names":["HomeContext","createContext","useHome","useContext","HomeComponent","forwardRef","homeId","qualitySettings","onLoaded","children","ref","zed","useZed","home","setHome","useState","useImperativeHandle","useEffect","observer","loaded","e","jsx","Home","memo","backgroundStyle"],"mappings":"qIAOa,MAAAA,EAAcC,EAAAA,cAAgC,MAAS,EAE7D,SAASC,GAAU,CACxB,OAAOC,EAAAA,WAAWH,CAAW,CAC/B,CCIA,MAAAI,EAAAC,EAAAA,WAAA,SAAA,CAAA,OAAAC,EAAA,gBAAAC,EAAA,SAAAC,EAAA,SAAAC,CAAA,EAAAC,EAAA,CAIE,MAAAC,EAAAC,IACA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAEAC,OAAAA,EAAAA,oBAAAN,EAAA,IAAAG,EAAA,CAAAA,CAAA,CAAA,EAEAI,EAAAA,UAAA,IAAA,CACE,GAAA,CAAAN,GAAA,CAAAH,EAAuB,OACvB,MAAAU,EAAAP,EAAA,SAAA,iBAAA,QAAAH,CAAA,EACA,MAAA,IAAA,CACEG,EAAA,SAAA,iBAAA,OAAAO,CAAA,CAA6C,CAC/C,EAAA,CAAAV,EAAAG,CAAA,CAAA,EAGFM,EAAAA,UAAA,IAAA,CACE,GAAA,CAAAN,EAAU,OAIV,MAAAQ,GAAA,UACE,MAAAR,EAAA,SAAAL,EAAAC,CAAA,EACAO,EAAA,CAAQ,OAAAR,EACN,aAAAK,EAAA,wBAAA,IAAAS,GAAAA,EAAA,WAAA,WAAA,CAC6E,CAAA,EAE/E,IAAA,CAAa,MAKf,MAAA,IAAA,EACE,UACE,MAAAD,GAAA,IACC,CACL,EAAA,CAAAb,EAAAC,EAAAI,CAAA,CAAA,EAGFU,EAAAA,IAAArB,EAAA,SAAA,CAAA,MAAAa,EAAA,SAAAJ,CAAA,CAAA,CACF,CAAA,EAEOa,EAAAC,EAAA,KAAAnB,CAAA,2YCxDA,MAAMoB,EAAiC,CAC5C,SAAU,WACV,KAAM,EACN,MAAO,EACP,IAAK,EACL,OAAQ,EACR,WACE,0GACJ"}