{"version":3,"file":"_common-4194b574.js","sources":["../../stories/Examples/Gui/_common.tsx"],"sourcesContent":["import { className, EventState } from '@babylonjs/core';\r\nimport {\r\n  forwardRef,\r\n  memo,\r\n  type ReactElement,\r\n  useCallback,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useState,\r\n} from 'react';\r\n\r\nimport { Zed } from '@zigbang/zed-sdk';\r\nimport styles from 'stories/styles/zed.module.css';\r\n\r\nimport type { GuiState } from '@/system/GUIDisplaySystem';\r\nimport type ZED from '@/ZED';\r\nimport type { StoryObj } from '@storybook/react';\r\n\r\n/**\r\n * Devices in Zed environemnt.\r\n *\r\n * You can attach gui on received 3D events for things.\r\n *\r\n * If you attach a callback function through 'zed.observer.onUpdateGUIPosition.add`, GuiState[] is called as a parameter every render events.\r\n *\r\n * ```ts\r\n * type GuiState = {\r\n *   key: string;\r\n *   /// thing 이름\r\n *   name: string;\r\n *   /// 화면 x 좌표\r\n *   x: number;\r\n *   /// 화면 y 좌표\r\n *   y: number;\r\n *   /// thing 객체 onCLick() 등 호출 가능\r\n *   thing: IThings;\r\n *   /// 현재 camera zoom 값에 따라 0~1 사이의 값 반환 min + (max - min) * iconSize로 활용 가능\r\n *   iconSize: number;\r\n * };\r\n * ```\r\n *\r\n */\r\nexport const SampleWrapper = forwardRef<\r\n  ZED | undefined,\r\n  {\r\n    /**\r\n     * onUpdateGUIPosition 이벤트를 받아서 그리는 컴포넌트\r\n     * @param props.things 각 GUI 요소들의 2D 좌표와 정보\r\n     * @param zed GUI 컴포넌트에서 조작할 수 있는 ZED 오브젝트\r\n     */\r\n    guiComponent: (props: { things?: GuiState[]; zed: ZED | null | undefined }) => ReactElement;\r\n\r\n    /**\r\n     * GUI의 2D 좌표가 변경될때마다 호출 되는 이벤트\r\n     * @param states 각 GUI 요소들의 2D 좌표와 정보\r\n     * @param eventState 이벤트 상태\r\n     */\r\n    onUpdateGUIPosition?: (states: GuiState[] | undefined, eventState: EventState) => void;\r\n  }\r\n>(function SampleWrapper({ guiComponent, onUpdateGUIPosition }, ref) {\r\n  const [zed, setZed] = useState<ZED | null>();\r\n  const [guiThings, setGuiThings] = useState<GuiState[]>();\r\n\r\n  useImperativeHandle(ref, () => zed ?? undefined, [zed]);\r\n\r\n  const callback = useCallback(\r\n    (states: GuiState[] | undefined, eventState: EventState) => {\r\n      setGuiThings(states);\r\n      onUpdateGUIPosition?.(states, eventState);\r\n    },\r\n    [onUpdateGUIPosition]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!zed) return;\r\n\r\n    (async () => {\r\n      zed.graphic.setEnablePostprocess(true);\r\n\r\n      zed.observer.onAllModelLoaded.addOnce(() => {\r\n        zed.camera.zoomFitOnInit();\r\n      });\r\n\r\n      await zed.loadHome('TYPE_04', {\r\n        modelLOD: 'LOD0',\r\n        textureMaxSize: '512',\r\n      });\r\n\r\n      // add updateThingGUI Callback\r\n      zed.observer.onUpdateGUIPosition.add(callback);\r\n    })();\r\n  }, [callback, zed]);\r\n\r\n  const ThingGui = memo(guiComponent);\r\n\r\n  return (\r\n    <Zed ref={setZed} className={styles.full}>\r\n      <ThingGui things={guiThings} zed={zed} />\r\n    </Zed>\r\n  );\r\n});\r\n\r\nexport type Story = StoryObj<typeof SampleWrapper>;\r\n"],"names":["SampleWrapper","forwardRef","guiComponent","onUpdateGUIPosition","ref","zed","setZed","useState","guiThings","setGuiThings","useImperativeHandle","callback","useCallback","states","eventState","useEffect","ThingGui","memo","jsx","Zed","styles"],"mappings":"8PA0COA,EAAAC,EAAA,WAAA,SAAA,CAAA,aAAAC,EAAA,oBAAAC,CAAA,EAAAC,EAAA,CAkBL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAEAG,EAAA,oBAAAN,EAAA,IAAAC,GAAA,OAAA,CAAAA,CAAA,CAAA,EAEA,MAAAM,EAAAC,EAAA,YAAiB,CAAAC,EAAAC,IAAA,CAEbL,EAAAI,CAAA,EACAV,GAAA,MAAAA,EAAAU,EAAAC,EAAwC,EAC1C,CAAAX,CAAA,CACoB,EAGtBY,EAAAA,UAAA,IAAA,CACEV,IAEA,UACEA,EAAA,QAAA,qBAAA,EAAA,EAEAA,EAAA,SAAA,iBAAA,QAAA,IAAA,CACEA,EAAA,OAAA,eAAyB,CAAA,EAG3B,MAAAA,EAAA,SAAA,UAAA,CAA8B,SAAA,OAClB,eAAA,KACM,CAAA,EAIlBA,EAAA,SAAA,oBAAA,IAAAM,CAAA,KACC,EAAA,CAAAA,EAAAN,CAAA,CAAA,EAGL,MAAAW,EAAAC,OAAAf,CAAA,EAEA,OAAAgB,EAAAA,IAAAC,EAAA,CAAA,IAAAb,EAAA,UAAAc,EAAA,KAAA,SAAAF,EAAA,IAAAF,EAAA,CAAA,OAAAR,EAAA,IAAAH,CAAA,CAAA,CAAA,CAAA,CAKF,CAAA;;;;;;;;;;;;;;;;;;;;;;;;"}